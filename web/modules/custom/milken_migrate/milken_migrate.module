<?php

/**
 * @file
 * Contains milken_migrate.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\migrate\Row;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\media\Entity\Media;
use GuzzleHttp\Exception\RequestException;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_help().
 */
function milken_migrate_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the milken_migrate module.
    case 'help.page.milken_migrate':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Migration classes and data for move to re-organized d8 site') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_migrate_prepare_row().
 */
function milken_migrate_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {

}

/**
 * Add log function.
 */
function _log_migrate_debug_info($message) {
  if (function_exists('drush_print')) {
    drush_print($message);
  }
  else {
    \Drupal::logger('migrate_jsonapi')->info($message);
  }
}

/**
 * Implements hook_cron().
 */
function milken_migrate_cron() {
  module_load_include('inc', 'milken_migrate', "milken_migrate.cron");
  return milken_migrate_cron_run_migrations();
}

/**
 * Custom function to pull thumbnails from oEmbed service.
 */
function milken_migrate_update_video() {

  $result = \Drupal::entityQuery("media")
    ->condition('bundle', 'video')
    // ->condition('uid', 1, '<>')
    ->execute();
  $i = 0;

  foreach ($result as $id) {
    $valid = FALSE;
    $video = Media::load($id);
    $url = $video->get('field_media_oembed_video')->getValue();
    $pos = strpos($url[0]['value'], 'https://www.youtube.com/embed/');
    $uri = 'na';
    if ($pos === FALSE) {

    }
    else {
      $uri = str_replace("https://www.youtube.com/embed/", "https://www.youtube.com/watch?v=", $url[0]['value']);

      try {
        $client = \Drupal::httpClient();
        $request = $client->get('https://www.youtube.com/oembed?url=' . $uri);
        list($format) = $request->getHeader('Content-Type');
        $content = (string) $request->getBody();
        if (strstr($format, 'text/xml') || strstr($format, 'application/xml')) {
          if (!$this->parseResourceXml($content, $uri)) {
            $valid = FALSE;
          }
          else {
            $valid = TRUE;
          }
        }
        elseif (strstr($format, 'text/javascript') || strstr($format, 'application/json')) {
          if (!Json::decode($content)) {
            $valid = FALSE;
          }
          else {
            $valid = TRUE;
          }
        }
        // If the response is neither XML nor JSON, we are in bat country.
        else {
          echo 'The fetched resource did not have a valid Content-Type header.';
          $valid = FALSE;
        }
      }
      catch (RequestException $e) {
        echo 'Could not retrieve the oEmbed resource.';
      }
      $video->set('field_media_oembed_video', $uri);
    }

    $video->set('uid', 1);
    if ($valid) {
      $video->save();
    }
    else {
      echo $id;
      echo " ";
      echo $url[0]['value'];
      echo "\n";
    }

    $i++;
    // }
  }
  echo $i;
}
